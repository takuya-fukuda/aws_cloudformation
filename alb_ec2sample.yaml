AWSTemplateFormatVersion: "2010-09-09"
Description: ALB と EC2 で稼働するシンプルな Flask API 環境

Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
    Default: "vpc-0abc1234def567890" # ← ここに実際の VPC ID
    Description: API を配置する VPC の ID

  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Default: "subnet-0123456789abcdef0,subnet-0fedcba9876543210" # ← ここに実際のパブリックサブネット ID を複数
    Description: ALB と EC2 を配置するサブネットの ID

  AmiId:
    Type: AWS::EC2::Image::Id
    Default: "ami-0abcd1234efgh5678" # ← ここに実際の AMI ID
    Description: EC2 で使用する AMI の ID

  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Default: "my-ssh-key" # ← ここに実際のキーペア名
    Description: EC2 へ SSH 用のキーペア名

  CertificateArn:
    Type: String
    Default: "arn:aws:acm:ap-northeast-1:123456789012:certificate/abcdefg-hijk-lmnop-qrst-uvwxyz012345" # ← 実際の ARN
    Description: ACM 証明書の ARN

  AlbName:
    Type: String
    Default: "my-flask-api-alb"
    Description: 作成する ALB の名前

  Ec2Name:
    Type: String
    Default: "my-flask-api-server"
    Description: EC2 の Name タグ

  InstanceType:
    Type: String
    Default: t3.micro
    AllowedValues:
      - t3.micro
      - t3.small
      - t3.medium
    Description: EC2 インスタンスタイプ

Resources:
  # ──────────────────────────────────────────────────────
  # セキュリティグループ：ALB 用（80番・443番へのパブリックアクセス許可）
  AlbSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: ALB HTTP/HTTPS SG
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0 # 必要に応じて制限してください
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0 # 必要に応じて制限してください

  # セキュリティグループ：EC2 用（ALB からの HTTP と、管理用の SSH のみ許可）
  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: EC2 SG
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        # ALB からの HTTP
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          SourceSecurityGroupId: !Ref AlbSecurityGroup
        # SSH（管理用）
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0 # 必要に応じて制限してください

  # ──────────────────────────────────────────────────────
  # Application Load Balancer
  ApplicationLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Ref AlbName
      Scheme: internet-facing
      Type: application
      Subnets: !Ref SubnetIds
      SecurityGroups:
        - !Ref AlbSecurityGroup

  # ターゲットグループ（EC2 インスタンスを登録）
  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    DependsOn:
      - EC2Instance # ← ここで EC2Instance の作成完了を待つ
    Properties:
      Name: !Sub "${AWS::StackName}-tg"
      Protocol: HTTP
      Port: 80
      VpcId: !Ref VpcId
      TargetType: instance
      HealthCheckProtocol: HTTP
      HealthCheckPath: /
      Matcher:
        HttpCode: "200"
      Targets:
        - Id: !Ref EC2Instance
          Port: 80

  # リスナー：HTTPS（443）→ ターゲットグループへフォワード
  HttpsListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref ApplicationLoadBalancer
      Protocol: HTTPS
      Port: 443
      Certificates:
        - CertificateArn: !Ref CertificateArn
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup

  # （オプション）HTTP→HTTPS リダイレクト用リスナー
  HttpListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref ApplicationLoadBalancer
      Protocol: HTTP
      Port: 80
      DefaultActions:
        - Type: redirect
          RedirectConfig:
            Protocol: HTTPS
            Port: "443"
            StatusCode: HTTP_301

  # ──────────────────────────────────────────────────────
  # EC2 インスタンス（Flask API ホスティング用）
  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      ImageId: !Ref AmiId
      KeyName: !Ref KeyName
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          DeviceIndex: 0
          SubnetId: !Select [0, !Ref SubnetIds]
          GroupSet:
            - !Ref InstanceSecurityGroup
      Tags:
        - Key: Name
          Value: !Ref Ec2Name

Outputs:
  LoadBalancerDNS:
    Description: Application Load Balancer の DNS 名
    Value: !GetAtt ApplicationLoadBalancer.DNSName
